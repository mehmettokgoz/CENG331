# Execution begins at address 0 
    .pos 0
    irmovq stack, %rsp      # Set up stack pointer
    call main       # Execute main program
    halt            # Terminate program 

	.pos 0x200
root:
	.quad 17
	.quad node6
	.quad node24
node6:
	.quad 6
	.quad node4
	.quad node11
node4:
	.quad 4
	.quad node3
	.quad node5
node3:
	.quad 3
	.quad 0
	.quad 0
node5:
	.quad 5
	.quad 0 # Remember that 0 is null.
	.quad 0
node11:
	.quad 11
	.quad node8
	.quad 0
node8:
	.quad 8
	.quad 0
	.quad 0
node24:
	.quad 24
	.quad node19
	.quad node40
node19:
	.quad 19
	.quad 0
	.quad 0
node40:
	.quad 40
	.quad 0
	.quad node52
node52:
	.quad 52
	.quad 0
	.quad 0


main:   
    irmovq root, %rdi
    call max_bst		
    ret


# max_bst function = %rdi: root
max_bst:
    xorq %rax, %rax
    mrmovq (%rdi), %r9
    andq %rdi,%rdi  
    jmp     test   

loop:   
    rrmovq %rdi, %r9
    mrmovq 16(%rdi), %rdi
    andq %rdi,%rdi 

test:   
    jne    loop          
    mrmovq (%r9), %rax
    xorq %r9,%r9
    ret
    
# Stack starts here at 0x200
    .pos 0x200
stack:
